[{"D:\\school\\moviesindex\\src\\index.js":"1","D:\\school\\moviesindex\\src\\reportWebVitals.js":"2","D:\\school\\moviesindex\\src\\App.js":"3"},{"size":500,"mtime":1607548333217,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":1973,"mtime":1609183031570,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"q7zwsw",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"D:\\school\\moviesindex\\src\\index.js",[],["16","17"],"D:\\school\\moviesindex\\src\\reportWebVitals.js",[],"D:\\school\\moviesindex\\src\\App.js",["18"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\"\nexport default function Movies() {\n  const [items, setItems] = useState();\n  useEffect(() => {\n    fetch(\n      \"https://api.themoviedb.org/3/movie/popular?api_key=41e0d7fc77f91f26e153e4bcaf87de0a\"\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(\"result\", result.results);\n        setItems(result);\n      });\n  }, []);\n  console.log(items);\n  return (\n    <div>\n\n      <div>{items?.results.map((item) =>(\n        <div  className = \"display\" key = {item.id}> title: {item.original_title} {<img src ={`https://image.tmdb.org/t/p/w200/${item.backdrop_path}`} />} \n        time: {item.release_date}\n         </div>\n        ) )}</div>\n    </div>\n  );\n}\n\n// function MyComponent() {\n//   const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [items, setItems] = useState([]);\n\n//   // Note: the empty deps array [] means\n//   // this useEffect will run once\n//   // similar to componentDidMount()\n//   useEffect(() => {\n//     fetch('https://jsonplaceholder.typicode.com/todos/1')\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           setIsLoaded(true);\n//           setItems(result);\n//         },\n//         // Note: it's important to handle errors here\n//         // instead of a catch() block so that we don't swallow\n//         // exceptions from actual bugs in components.\n//         (error) => {\n//           setIsLoaded(true);\n//           setError(error);\n//         }\n//       )\n//   }, [])\n\n//   if (error) {\n//     return <div>Error: {error.message}</div>;\n//   } else if (!isLoaded) {\n//     return <div>Loading...</div>;\n//   } else {\n//     return (\n//       <ul>\n//         {items.map(item => (\n//           <li key={item.id}>\n//             {item.name} {item.price}\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n// export default MyComponent\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":20,"column":84,"nodeType":"25","endLine":20,"endColumn":154},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]